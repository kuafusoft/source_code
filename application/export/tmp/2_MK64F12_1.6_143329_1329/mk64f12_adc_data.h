/*Device: MK64F12
 Version: 1.6
 Description: MK64F12 Freescale Microcontroller
*/


#include "../chip/chip.h"
#include "../inc/logic.h"


struct DATA ADC_REG_DATA[] = {
	{"OFFSET(LPTMR_MemMap, PSR)", OFFSET(LPTMR_MemMap,PSR), 4},
	{"OFFSET(LPTMR_MemMap, CMR)", OFFSET(LPTMR_MemMap,CMR), 8},
	{"OFFSET(LPTMR_MemMap, CNR)", OFFSET(LPTMR_MemMap,CNR), 12},
	{"sizeof(LPTMR_MemMap)", sizeof(struct LPTMR_MemMap), 16}
};

struct DATA ADC_BITFIELD_DATA[] = {
	{"LPTMR_CSR_TEN_MASK", LPTMR_CSR_TEN_MASK, MASK(0,1)},
	{"LPTMR_CSR_TEN_SHIFT", LPTMR_CSR_TEN_SHIFT, SHIFT(0)},
	{"LPTMR_CSR_TMS_MASK", LPTMR_CSR_TMS_MASK, MASK(1,1)},
	{"LPTMR_CSR_TMS_SHIFT", LPTMR_CSR_TMS_SHIFT, SHIFT(1)},
	{"LPTMR_CSR_TFC_MASK", LPTMR_CSR_TFC_MASK, MASK(2,1)},
	{"LPTMR_CSR_TFC_SHIFT", LPTMR_CSR_TFC_SHIFT, SHIFT(2)},
	{"LPTMR_CSR_TPP_MASK", LPTMR_CSR_TPP_MASK, MASK(3,1)},
	{"LPTMR_CSR_TPP_SHIFT", LPTMR_CSR_TPP_SHIFT, SHIFT(3)},
	{"LPTMR_CSR_TPS_MASK", LPTMR_CSR_TPS_MASK, MASK(4,2)},
	{"LPTMR_CSR_TPS_SHIFT", LPTMR_CSR_TPS_SHIFT, SHIFT(4)},
	{"LPTMR_CSR_TPS_VALUE", LPTMR_CSR_TPS(1), SHIFT_VALUE(4)},
	{"LPTMR_CSR_TIE_MASK", LPTMR_CSR_TIE_MASK, MASK(6,1)},
	{"LPTMR_CSR_TIE_SHIFT", LPTMR_CSR_TIE_SHIFT, SHIFT(6)},
	{"LPTMR_CSR_TCF_MASK", LPTMR_CSR_TCF_MASK, MASK(7,1)},
	{"LPTMR_CSR_TCF_SHIFT", LPTMR_CSR_TCF_SHIFT, SHIFT(7)},
	{"LPTMR_PSR_PCS_MASK", LPTMR_PSR_PCS_MASK, MASK(0,2)},
	{"LPTMR_PSR_PCS_SHIFT", LPTMR_PSR_PCS_SHIFT, SHIFT(0)},
	{"LPTMR_PSR_PCS_VALUE", LPTMR_PSR_PCS(1), SHIFT_VALUE(0)},
	{"LPTMR_PSR_PBYP_MASK", LPTMR_PSR_PBYP_MASK, MASK(2,1)},
	{"LPTMR_PSR_PBYP_SHIFT", LPTMR_PSR_PBYP_SHIFT, SHIFT(2)},
	{"LPTMR_PSR_PRESCALE_MASK", LPTMR_PSR_PRESCALE_MASK, MASK(3,4)},
	{"LPTMR_PSR_PRESCALE_SHIFT", LPTMR_PSR_PRESCALE_SHIFT, SHIFT(3)},
	{"LPTMR_PSR_PRESCALE_VALUE", LPTMR_PSR_PRESCALE(1), SHIFT_VALUE(3)},
	{"LPTMR_CMR_COMPARE_MASK", LPTMR_CMR_COMPARE_MASK, MASK(0,16)},
	{"LPTMR_CMR_COMPARE_SHIFT", LPTMR_CMR_COMPARE_SHIFT, SHIFT(0)},
	{"LPTMR_CMR_COMPARE_VALUE", LPTMR_CMR_COMPARE(1), SHIFT_VALUE(0)},
	{"LPTMR_CNR_COUNTER_MASK", LPTMR_CNR_COUNTER_MASK, MASK(0,16)},
	{"LPTMR_CNR_COUNTER_SHIFT", LPTMR_CNR_COUNTER_SHIFT, SHIFT(0)},
	{"LPTMR_CNR_COUNTER_VALUE", LPTMR_CNR_COUNTER(1), SHIFT_VALUE(0)}
};